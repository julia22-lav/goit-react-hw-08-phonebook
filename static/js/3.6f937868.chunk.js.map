{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","pages/contacts-page/ContactsPage.module.css","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.js","pages/contacts-page/ContactsPage.js"],"names":["module","exports","name","number","dispatch","actions","addContactRequest","axios","post","then","data","addContactSuccess","catch","error","addContactError","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","ContactForm","state","onChange","event","preventDefault","console","dir","currentTarget","value","currentState","upadateState","setState","onSubmit","props","reset","Form","this","className","s","Group","controlId","Label","TextLabel","Control","FormControl","type","placeholder","Button","variant","Component","connect","contact","operations","Filter","filterState","filterChange","inline","contacts","filter","target","ContactListItem","id","deleteContact","listItem","onClick","buttonListItem","getFilter","getContacts","createSelector","items","normalizedFilter","toLowerCase","includes","ContactList","onLoad","ListGroup","map","selectors","ContactsPage","Container","Row","Col","h2Header"],"mappings":"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","file":"static/js/3.6f937868.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__2uvNr\",\"Button\":\"ContactForm_Button__3FvXi\",\"TextLabel\":\"ContactForm_TextLabel__3kjSK\",\"FormControl\":\"ContactForm_FormControl__mzlyk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelFilter\":\"Filter_labelFilter__10Rx0\",\"inputFilter\":\"Filter_inputFilter__31_bB\",\"Button\":\"Filter_Button__33F-5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__3qDz8\",\"buttonListItem\":\"ContactListItem_buttonListItem__1iz8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListGroup\":\"ContactList_ListGroup__37L23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2Header\":\"ContactsPage_h2Header__fO3VI\"};","import axios from 'axios';\r\nimport actions from './contacts-actions';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(actions.fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(actions.fetchContactsError(error)));\r\n};\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  dispatch(actions.addContactRequest());\r\n  axios\r\n    .post('/contacts', { name, number })\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch(error => dispatch(actions.addContactError(error)));\r\n};\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(actions.deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(actions.deleteContactError(error)));\r\n};\r\n\r\nexport default { addContact, deleteContact, fetchContacts };\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport operations from '../../redux/contacts/contacts-operations';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  onChange = event => {\r\n    // this.reset();\r\n    event.preventDefault();\r\n\r\n    console.dir(event.currentTarget);\r\n    const { value, name } = event.currentTarget;\r\n    const currentState = this.state;\r\n    const upadateState = { [name]: value };\r\n    this.setState({ ...currentState, ...upadateState });\r\n  };\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n    event.currentTarget.value = '';\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.onSubmit} className={s.Form}>\r\n        <Form.Group controlId=\"formBasicName\">\r\n          <Form.Label className={s.TextLabel}>Name</Form.Label>\r\n          <Form.Control\r\n            className={s.FormControl}\r\n            type=\"name\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            placeholder=\"Enter name\"\r\n            onChange={this.onChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicNumber\">\r\n          <Form.Label className={s.TextLabel}>Number</Form.Label>\r\n          <Form.Control\r\n            className={s.FormControl}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"Enter phone number\"\r\n            value={this.state.number}\r\n            onChange={this.onChange}\r\n          />\r\n        </Form.Group>\r\n        <Button className={s.Button} variant=\"primary\" type=\"submit\">\r\n          Add contact\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: contact => dispatch(operations.addContact(contact)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import { Component } from 'react';\r\nimport { v4 as genId } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    const { filterState, filterChange } = this.props;\r\n\r\n    return (\r\n      <Form inline>\r\n        <FormControl\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filterState}\r\n          onChange={filterChange}\r\n          placeholder=\"Search\"\r\n          className=\"mr-sm-2\"\r\n        />\r\n        <Button className={s.Button} variant=\"primary\">\r\n          Search by contact name\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  filters: PropTypes.string,\r\n  filterChange: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filterState: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  filterChange: event => dispatch(actions.filterChange(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nclass ContactListItem extends Component {\r\n  render() {\r\n    const { id, name, number, deleteContact } = this.props;\r\n    return (\r\n      <li id={id} className={s.listItem}>\r\n        {name}: {number}\r\n        <button\r\n          onClick={() => {\r\n            deleteContact(id);\r\n          }}\r\n          className={s.buttonListItem}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  id: PropTypes.string,\r\n  deleteContact: PropTypes.func,\r\n};\r\nexport default ContactListItem;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getItems = state => state.contacts.items;\r\n\r\nconst getContacts = createSelector([getFilter, getItems], (filter, items) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return items.filter(({ name }) =>\r\n    name ? name.toLowerCase().includes(normalizedFilter) : false,\r\n  );\r\n});\r\n\r\nexport default { getFilter, getContacts };\r\n","import { Component } from 'react';\r\nimport ContactListItem from '../ContactListItem';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport { connect } from 'react-redux';\r\nimport operations from '../../redux/contacts/contacts-operations';\r\nimport selectors from '../../redux/contacts/contacts-selectors';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nclass ContactList extends Component {\r\n  componentDidMount() {\r\n    this.props.onLoad();\r\n  }\r\n\r\n  render() {\r\n    const { contacts, deleteContact } = this.props;\r\n\r\n    return (\r\n      <ListGroup className={s.ListGroup}>\r\n        {contacts.map(({ name, number, id }) => {\r\n          return (\r\n            <ContactListItem\r\n              name={name}\r\n              number={number}\r\n              key={id}\r\n              id={id}\r\n              deleteContact={deleteContact}\r\n              className={s.ContactList}\r\n            />\r\n          );\r\n        })}\r\n      </ListGroup>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: selectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: contactId => dispatch(operations.deleteContact(contactId)),\r\n  onLoad: () => dispatch(operations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport ContactForm from '../../components/ContactForm';\r\nimport Filter from '../../components/Filter';\r\nimport ContactList from '../../components/ContactList';\r\nimport s from './ContactsPage.module.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst ContactsPage = () => {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <h2 className={s.h2Header}>Phonebook</h2>\r\n          <ContactForm />\r\n        </Col>\r\n        <Col>\r\n          <h2 className={s.h2Header}>Contacts</h2>\r\n          <Filter />\r\n          <ContactList />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ContactsPage;\r\n"],"sourceRoot":""}